declare class Make {
    #private;
    formatData(dataUsr?: Date): string;
    tagInfNFe(obj: any): void;
    tagIde(obj: any): void;
    tagRefNFe(obj: string | string[]): void;
    tagRefNF(obj: any): void;
    tagRefNFP(obj: any): void;
    tagRefCTe(obj: any): void;
    tagRefECF(obj: any): void;
    tagEmit(obj: any): void;
    tagEnderEmit(obj: any): void;
    tagDest(obj: any): void;
    tagEnderDest(obj: any): 1 | undefined;
    tagRetirada(obj: any): void;
    tagAutXML(obj: any): void;
    tagProd(obj: any): Promise<void>;
    tagCreditoPresumidoProd(obj: any): void;
    taginfAdProd(index: number, obj: any): void;
    tagCEST(obj: any): void;
    tagRECOPI(obj: any): void;
    tagDI(index: number, obj: any): void;
    tagAdi(index: number, obj: any): void;
    tagDetExport(obj: any): void;
    tagDetExportInd(obj: any): void;
    tagRastro(obj: any): void;
    tagVeicProd(obj: any): void;
    tagMed(obj: any): void;
    tagArma(obj: any): void;
    tagComb(obj: any): void;
    tagEncerrante(): void;
    tagOrigComb(): void;
    tagImposto(): void;
    tagProdICMS(index: number, data: any): void;
    tagProdICMSPart(index: number, obj: any): void;
    tagProdICMSST(index: number, obj: any): void;
    tagProdICMSSN(index: number, obj: any): void;
    tagProdICMSUFDest(index: number, obj: any): void;
    tagProdIPI(index: number, data: any): void;
    tagProdII(index: number, obj: any): void;
    tagProdPIS(index: number, obj: any): void;
    tagProdPISST(index: number, obj: any): void;
    tagProdCOFINS(index: number, obj: any): void;
    tagProdCOFINSST(index: number, obj: any): void;
    tagProdISSQN(index: number, obj: any): void;
    tagProdImpostoDevol(index: number, obj: any): void;
    tagICMSTot(obj?: null): void;
    tagISSQNTot(obj: any): void;
    tagRetTrib(obj: any): void;
    tagTransp(obj: any): void;
    tagTransporta(obj: any): void;
    tagRetTransp(obj: any): void;
    tagVeicTransp(obj: any): void;
    tagReboque(obj: any): void;
    tagVagao(obj: any): void;
    tagBalsa(obj: any): void;
    tagVol(obj: any): void;
    tagLacres(obj: any): void;
    tagFat(obj: any): this;
    tagDup(lista: any[]): this;
    tagTroco(obj: any): void;
    tagDetPag(obj: any): void;
    tagIntermed(obj: any): void;
    tagInfAdic(obj: any): void;
    tagObsCont(obj: any): void;
    tagObsFisco(obj: any): void;
    tagProcRef(obj: any): void;
    tagExporta(obj: any): void;
    tagCompra(obj: any): void;
    tagCana(obj: any): void;
    tagforDia(): void;
    tagdeduc(): void;
    taginfNFeSupl(): void;
    tagInfRespTec(obj: any): void;
    tagRetiEnder(obj: any): void;
    tagEntrega(obj: any): void;
    generateICMS00(obj: any): Record<string, any>;
    generateICMS02(obj: any): Record<string, any>;
    generateICMS10(obj: any): Record<string, any>;
    generateICMS15(obj: any): Record<string, any>;
    generateICMS20(obj: any): Record<string, any>;
    generateICMS30(obj: any): Record<string, any>;
    generateICMS40(obj: any): Record<string, any>;
    generateICMS51(obj: any): Record<string, any>;
    generateICMS53(obj: any): Record<string, any>;
    generateICMS60(obj: any): Record<string, any>;
    generateICMS61(obj: any): Record<string, any>;
    generateICMS70(obj: any): Record<string, any>;
    generateICMS90(obj: any): Record<string, any>;
    equalizeIPIParameters(obj: any): any;
    generateIPITrib(obj: any): Record<string, any>;
    generateIPINT(obj: any): Record<string, any>;
    xml(): any;
}
export { Make };
declare const _default: {
    Make: typeof Make;
};
export default _default;
